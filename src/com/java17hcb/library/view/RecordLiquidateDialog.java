/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.java17hcb.library.view;

import com.java17hcb.library.bus.BusBook;
import com.java17hcb.library.bus.BusLibraryCard;
import com.java17hcb.library.bus.BusStaff;
import com.java17hcb.library.entity.Book;
import com.java17hcb.library.entity.LibraryCard;
import com.java17hcb.library.entity.LiquidateHistory;
import com.java17hcb.library.entity.Staff_;
import com.java17hcb.library.utils.CurrentStaff;
import java.awt.Component;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.ArrayList;
import javax.swing.AbstractListModel;
import javax.swing.ComboBoxModel;

import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JSpinner;
import javax.swing.SpinnerNumberModel;

/**
 *
 * @author labyr
 */
public class RecordLiquidateDialog extends javax.swing.JDialog {

    private java.awt.Frame parent; 
    
    public RecordLiquidateDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        
        initComponents();
        setupComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btngReason = new javax.swing.ButtonGroup();
        pnInfo = new javax.swing.JPanel();
        lbStaff = new javax.swing.JLabel();
        lbLiquidateDate = new javax.swing.JLabel();
        tfStaff = new javax.swing.JTextField();
        tfLiquidateDate = new javax.swing.JTextField();
        pnLiquidatedBook = new javax.swing.JPanel();
        lbBook = new javax.swing.JLabel();
        cbBook = new javax.swing.JComboBox<>();
        lbReason = new javax.swing.JLabel();
        rbLosted = new javax.swing.JRadioButton();
        rbBroken = new javax.swing.JRadioButton();
        rbLostedByStaff = new javax.swing.JRadioButton();
        lbCopies = new javax.swing.JLabel();
        snCopies = new javax.swing.JSpinner();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnInfo.setBorder(javax.swing.BorderFactory.createTitledBorder("Receipt Info"));

        lbStaff.setText("Staff");

        lbLiquidateDate.setText("Liquidate Date");

        tfStaff.setEditable(false);

        tfLiquidateDate.setEditable(false);

        javax.swing.GroupLayout pnInfoLayout = new javax.swing.GroupLayout(pnInfo);
        pnInfo.setLayout(pnInfoLayout);
        pnInfoLayout.setHorizontalGroup(
            pnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbStaff, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbLiquidateDate, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfStaff, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(tfLiquidateDate))
                .addContainerGap())
        );
        pnInfoLayout.setVerticalGroup(
            pnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnInfoLayout.createSequentialGroup()
                .addGroup(pnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbStaff)
                    .addComponent(tfStaff, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnInfoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLiquidateDate)
                    .addComponent(tfLiquidateDate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pnLiquidatedBook.setBorder(javax.swing.BorderFactory.createTitledBorder("Liquidated Book"));

        lbBook.setText("Book");

        cbBook.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        lbReason.setText("Reason");

        btngReason.add(rbLosted);
        rbLosted.setSelected(true);
        rbLosted.setText("Losted");

        btngReason.add(rbBroken);
        rbBroken.setText("Broken");

        btngReason.add(rbLostedByStaff);
        rbLostedByStaff.setText("Losted by Staff");

        lbCopies.setText("Copies");

        snCopies.setModel(new javax.swing.SpinnerNumberModel(0, 0, 0, 1));

        javax.swing.GroupLayout pnLiquidatedBookLayout = new javax.swing.GroupLayout(pnLiquidatedBook);
        pnLiquidatedBook.setLayout(pnLiquidatedBookLayout);
        pnLiquidatedBookLayout.setHorizontalGroup(
            pnLiquidatedBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLiquidatedBookLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnLiquidatedBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbBook, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbReason, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbCopies, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnLiquidatedBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnLiquidatedBookLayout.createSequentialGroup()
                        .addGroup(pnLiquidatedBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbLosted)
                            .addComponent(rbBroken)
                            .addComponent(rbLostedByStaff))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(cbBook, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnLiquidatedBookLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(snCopies, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(138, 138, 138))
        );
        pnLiquidatedBookLayout.setVerticalGroup(
            pnLiquidatedBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnLiquidatedBookLayout.createSequentialGroup()
                .addGroup(pnLiquidatedBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbBook)
                    .addComponent(cbBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnLiquidatedBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbReason)
                    .addComponent(rbLosted))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbBroken)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rbLostedByStaff)
                .addGap(18, 18, 18)
                .addGroup(pnLiquidatedBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbCopies)
                    .addComponent(snCopies, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 18, Short.MAX_VALUE))
        );

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnInfo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnLiquidatedBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addGap(18, 18, 18)
                        .addComponent(btnOK)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOK});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnInfo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnLiquidatedBook, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnOK))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        Book selectedBook = (Book)cbBook.getSelectedItem();
        
        int reason = 0;
        switch(btngReason.getSelection().getActionCommand()){
             case "Losted":
                reason = LiquidateHistory.Reason.LOSTED;
                break;
            case "Broken":
                reason = LiquidateHistory.Reason.BROKEN;
                break;
            case "LostedByStaff":
                reason = LiquidateHistory.Reason.LOSTED_BY_STAFF;
                break;
        }
        
        if(selectedBook == null){
            JOptionPane.showMessageDialog(this, 
                        "Please choose book before commit.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        
        int copies = (Integer)snCopies.getValue();
        
        int status = BusStaff.getInstance().liquidateBook(selectedBook.getId(), reason, copies);
        switch(status){
            case BusStaff.CURRENT_STAFF_DONT_HAVE_PERMISSION:
                JOptionPane.showMessageDialog(this, 
                        "Current staff don't have permission.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                break;
            case BusStaff.LIQUIDATE_BOOK_NOT_EXIST:
                JOptionPane.showMessageDialog(this, 
                        "This book not exist.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                break;
            case BusStaff.LIQUIDATE_NOT_ENOUGH_COPY:
                JOptionPane.showMessageDialog(this, 
                        "The book " + selectedBook.getTitle() + " don't have enough copies. \n" + 
                            "Remain copies: " + selectedBook.getRemainCopy(),
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                break;
            case BusStaff.LIQUIDATE_UNKNOWN_ERROR:
                JOptionPane.showMessageDialog(this, 
                        "Unknown.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
                break;
            case BusStaff.LIQUIDATE_SUCCESS:
                JOptionPane.showMessageDialog(this, 
                        "Create new liquidate record success!",
                        "Success",
                        JOptionPane.INFORMATION_MESSAGE);
        }
        
        ((MainFrame)parent).setupBookTable();
        dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.ButtonGroup btngReason;
    private javax.swing.JComboBox<String> cbBook;
    private javax.swing.JLabel lbBook;
    private javax.swing.JLabel lbCopies;
    private javax.swing.JLabel lbLiquidateDate;
    private javax.swing.JLabel lbReason;
    private javax.swing.JLabel lbStaff;
    private javax.swing.JPanel pnInfo;
    private javax.swing.JPanel pnLiquidatedBook;
    private javax.swing.JRadioButton rbBroken;
    private javax.swing.JRadioButton rbLosted;
    private javax.swing.JRadioButton rbLostedByStaff;
    private javax.swing.JSpinner snCopies;
    private javax.swing.JTextField tfLiquidateDate;
    private javax.swing.JTextField tfStaff;
    // End of variables declaration//GEN-END:variables

    private void setupComponents() {
        setTitle("Create Liquidate Record");
        setLocationRelativeTo(null);
        
        // Set reader's name
        tfStaff.setText(CurrentStaff.getCurrentStaff().getFullName());
        
        // Set rent date
        Date lostedDate = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/mm/yyyy");
        tfLiquidateDate.setText(dateFormat.format(lostedDate));
        
        // Set combobox data
        List<Book> books = BusBook.getInstance().findAllAvailableBooks();
        cbBook.setModel(new LiquidateBookModel(books));
        cbBook.addItemListener(new ItemChangeListener());
        
        // Set reason action command
        rbLosted.setActionCommand("Losted");
        rbBroken.setActionCommand("Broken");
        rbLostedByStaff.setActionCommand("LostByStaff");
    }
    
    class LiquidateBookModel extends AbstractListModel implements ComboBoxModel {
        List<Book> books;
        Book selectedBook;
        
        public LiquidateBookModel(List<Book> books){
            this.books = books;
        }

        public Object getElementAt(int index) {
          return books.get(index);
        }

        public int getSize() {
            return books.size();
          }

        public void setSelectedItem(Object selectedItem) {
          selectedBook = (Book)selectedItem;
        }

        public Object getSelectedItem() {
          return selectedBook;
        }
    }
    
    class ItemChangeListener implements ItemListener{
        @Override
        public void itemStateChanged(ItemEvent event) {
            if (event.getStateChange() == ItemEvent.SELECTED) {
                Book book = (Book)event.getItem();
                SpinnerNumberModel numberModel = new SpinnerNumberModel(1,1,book.getRemainCopy(),1);
                snCopies.setModel(numberModel);
            }
        }       
    }
}

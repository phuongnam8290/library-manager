package com.java17hcb.library.view;

import com.java17hcb.library.bus.BusBook;
import com.java17hcb.library.bus.BusLibraryCard;
import com.java17hcb.library.entity.Book;
import com.java17hcb.library.entity.LibraryCard;
import java.awt.Component;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.AbstractListModel;
import javax.swing.ComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

public class RentBookDialog extends javax.swing.JDialog {

    private java.awt.Frame parent;
    private LibraryCard card;
    /**
     * Creates new form RentBookDialog
     */
    public RentBookDialog(java.awt.Frame parent, boolean modal, LibraryCard card) {
        super(parent, modal);
        this.card = card;
        
        initComponents();
        setupComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnReceipt = new javax.swing.JPanel();
        lbReader = new javax.swing.JLabel();
        lbRentDate = new javax.swing.JLabel();
        tfReader = new javax.swing.JTextField();
        tfRentDate = new javax.swing.JTextField();
        pnBooks = new javax.swing.JPanel();
        lbErrStatus = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        cbBook1 = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        cbBook2 = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cbBook3 = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        cbBook4 = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        cbBook5 = new javax.swing.JComboBox<>();
        btnOK = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnReceipt.setBorder(javax.swing.BorderFactory.createTitledBorder("Receipt Info"));

        lbReader.setText("Reader");

        lbRentDate.setText("Rent Date");

        tfReader.setEditable(false);

        tfRentDate.setEditable(false);

        javax.swing.GroupLayout pnReceiptLayout = new javax.swing.GroupLayout(pnReceipt);
        pnReceipt.setLayout(pnReceiptLayout);
        pnReceiptLayout.setHorizontalGroup(
            pnReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnReceiptLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbReader, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lbRentDate, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(18, 18, 18)
                .addGroup(pnReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tfReader)
                    .addComponent(tfRentDate))
                .addContainerGap())
        );
        pnReceiptLayout.setVerticalGroup(
            pnReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnReceiptLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbReader)
                    .addComponent(tfReader, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnReceiptLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbRentDate)
                    .addComponent(tfRentDate, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnBooks.setBorder(javax.swing.BorderFactory.createTitledBorder("Rented Book"));
        pnBooks.setMaximumSize(new java.awt.Dimension(300, 300));

        lbErrStatus.setForeground(new java.awt.Color(255, 51, 51));

        jLabel6.setText("Book 1");

        cbBook1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBook1.setEnabled(false);

        jLabel7.setText("Book 2");

        cbBook2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBook2.setEnabled(false);

        jLabel8.setText("Book 3");

        cbBook3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBook3.setEnabled(false);

        jLabel9.setText("Book 4");

        cbBook4.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBook4.setEnabled(false);

        jLabel10.setText("Book 5");

        cbBook5.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbBook5.setEnabled(false);

        javax.swing.GroupLayout pnBooksLayout = new javax.swing.GroupLayout(pnBooks);
        pnBooks.setLayout(pnBooksLayout);
        pnBooksLayout.setHorizontalGroup(
            pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBooksLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnBooksLayout.createSequentialGroup()
                        .addGroup(pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGroup(pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnBooksLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbBook1, 0, 230, Short.MAX_VALUE))
                            .addGroup(pnBooksLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbBook2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnBooksLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbBook3, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnBooksLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbBook4, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(pnBooksLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(cbBook5, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(lbErrStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnBooksLayout.setVerticalGroup(
            pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnBooksLayout.createSequentialGroup()
                .addComponent(lbErrStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cbBook1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(cbBook2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbBook3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cbBook4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(pnBooksLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbBook5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );

        btnOK.setText("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnReceipt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnBooks, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancel)
                        .addGap(18, 18, 18)
                        .addComponent(btnOK)))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnOK});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnReceipt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnBooks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnOK)
                    .addComponent(btnCancel))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        // Get all books in comboboxs
        List<Book> selectedBooks = new ArrayList();
        for(Component c : pnBooks.getComponents()){
            if (c instanceof JComboBox && c.isEnabled()){
                Book book = (Book)((JComboBox)c).getSelectedItem();
                if(book != null){
                    selectedBooks.add(book);
                }
            }
        }
        
        // Check if user select any book
        if(selectedBooks.isEmpty()){
            JOptionPane.showMessageDialog(this, 
                        "Please choose some book before commit.",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
            
            return;
        }
        
        // Create rent receipt based on card & selected books
        List<Integer> bookIds = new ArrayList();
        for (Book book : selectedBooks){
            bookIds.add(book.getId());
        }
        
        boolean success = BusLibraryCard.getInstance().rentBooks(card.getId(), bookIds);
        if(success){
            JOptionPane.showMessageDialog(this, 
                                    "Create new rent receipt for reader " + card.getFullName() + " success!",
                                    "Success",
                                    JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(this, 
                        "Some error happen. Please try again later!",
                        "Error",
                        JOptionPane.ERROR_MESSAGE);
        }
        
        dispose();
    }//GEN-LAST:event_btnOKActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JComboBox<String> cbBook1;
    private javax.swing.JComboBox<String> cbBook2;
    private javax.swing.JComboBox<String> cbBook3;
    private javax.swing.JComboBox<String> cbBook4;
    private javax.swing.JComboBox<String> cbBook5;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbErrStatus;
    private javax.swing.JLabel lbReader;
    private javax.swing.JLabel lbRentDate;
    private javax.swing.JPanel pnBooks;
    private javax.swing.JPanel pnReceipt;
    private javax.swing.JTextField tfReader;
    private javax.swing.JTextField tfRentDate;
    // End of variables declaration//GEN-END:variables

    private void setupComponents() {
        setTitle("Create Rent Receipt");
        setLocationRelativeTo(null);
        
        // Set reader's name
        tfReader.setText(card.getFullName());
        
        // Set rent date
        Date rentDate = new Date();
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd/mm/yyyy");
        tfRentDate.setText(dateFormat.format(rentDate));
        
        // Check card's rent status
        int rentStatus = BusLibraryCard.getInstance().checkRentStatus(card.getId());
        List<Book> books = BusBook.getInstance().findAllAvailableBooks();
        
        switch (rentStatus){
            case BusLibraryCard.CARD_EXPIRED:{
                lbErrStatus.setText("This card has expired.");
                break;
            }
            case BusLibraryCard.CARD_HAVE_OVERDUE_BOOK: {
                lbErrStatus.setText("This card has overdue book.");
                break;
            }
            case BusLibraryCard.CARD_LIMIT_REACHED: {
                lbErrStatus.setText("This card has reached maximun limit.");
                break;
            }
            case BusLibraryCard.CARD_ERROR: {
                lbErrStatus.setText("Unknow error");
                break;
            }
            default: {
                int enabledCombobox = 0;
                for (Component c : pnBooks.getComponents()){
                    if (c instanceof JComboBox && enabledCombobox < rentStatus){
                        c.setEnabled(true);
                        ((JComboBox)c).setModel(new RentBookModel(books));
                        enabledCombobox++;
                    }
                }
            }
        }
    }
    
    class RentBookModel extends AbstractListModel implements ComboBoxModel {
        List<Book> books;
        Book selectedBook;
        
        public RentBookModel(List<Book> books){
            this.books = books;
        }

        public Object getElementAt(int index) {
          return books.get(index);
        }

        public int getSize() {
            return books.size();
          }

        public void setSelectedItem(Object selectedItem) {
          selectedBook = (Book)selectedItem;
        }

        public Object getSelectedItem() {
          return selectedBook;
        }
    }
}
